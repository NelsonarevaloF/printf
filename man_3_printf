.TH _PRINTF (0) "26 October 2020" "1.0" "_printf Man Page"
.SH NAME
.B _printf
- Prints according to a format.
.SH SYNOPSIS
.BR #include
.BR <holberton.h>

.BR int _printf(const char *format, ...);
.SH DESCRIPTION
It produces standart output according to a
.B format
given.
.SH RETURN VALUES
The function returns the number of characters printed and excludes the null byte ('\0') at the end of any string.
.SH FORMAT OF THE FORMAT STRING
The
.I format
is a string, and has to be entered as a regular string. The program will print all the ordinary characters different than
.BI %
, once it finds the convertion flag
.BI %
it will convert the next argument of the function based on the modifier after the convertion flag.

.BR _printf("
.I %format
", type);
.SH MODIFIERS
Once the function identifies the flag
.BI %
it will look for a modifier (d,i,c,s), bellow we explainned the usage of each modifier:
.IP -d
Prints an integer with sign in base 10.
.IP -i
Prints an integer with sign in base 10.
.IP -c
Prints the character based on the value sotored at the
.IP -s
Prints a string character by character.
.I ASCII
table.

.IP print_s
The function will print a string.

.SH Examples of how to use

.IP -%d and %i:

.BR _printf("Length:[%d, %i]\n", len, len);

.IP -%c

.BR _printf("Character:[%c]\n", 'H');

.IP -%s

.BR _printf("String:[%s]\n", "I am a string !");


.SH Functions used

va_start, va_end, va_copy,
va_arg and our own version of _putchar

.SH File List

.IP - _printf is the main function.
.IP - print_s This function prints strings.
.IP - print_c This function prints characters.
.IP - print_i This function prints integers.
.IP - get_print This function evaluates the cases for special characters.
.IP - _putchar This function is our own version of putchar. It uses write and it counts the characters printed.

.SH SEE ALSO
printf(3)
.SH BUGS
Not known bugs yet =)
.SH AUTHOR
Writen and developed by Nelson Arevalo and Laura Valencia